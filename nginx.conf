events {
    worker_connections 1024;
}

http {
    # HTTP server - redirect all requests to HTTPS
    server {
        listen 80 default_server;
        server_name _;
        
        # Redirect all HTTP requests to HTTPS
        return 301 https://$host$request_uri;
    }
    
    # HTTPS server block
    server {
        listen 443 ssl default_server;
        server_name _;
        
        # SSL Configuration
        ssl_certificate /etc/ssl/cert/cert.pem;
        ssl_certificate_key /etc/ssl/cert/cert.key;
        
        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
        ssl_prefer_server_ciphers off;
        
        # SSL optimization
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Proxy headers with HTTPS indication
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Port 443;

        # Auth service routes
        location = /auth {
            proxy_pass http://auth-service/;
        }
        
        location /auth/ {
            proxy_pass http://auth-service/;
        }
        
        # Default route to app service
        location / {
            proxy_pass http://app-service/;
        }
        
        # Health check
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
